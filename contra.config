// Obtain current hostname
def hostname = "hostname".execute().text.trim().replace("-", "")

// Check if this configuration is being loaded on the expected cluster
def expectedHostname = "csched"

if (!hostname.startsWith(expectedHostname)) {
    throw new IllegalStateException("""
    ===============================================================
    ERROR: You are trying to run the pipeline on the '${hostname}' cluster
    but the configuration is specifically for the '${expectedHostname}' cluster.
    Please ensure you're using the correct configuration/profile.
    ===============================================================
    """.stripIndent())
}

    
    module = ['java/17.0.4', 'apptainer']

    //Set up apptainer containers and mount path
    apptainer {
        enabled = true
        runOptions = '--env="CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES}" -B /b -B /bscratch -B /homes --nv'
        envWhitelist = 'APPTAINER_BINDPATH, APPTAINER_LD_LIBRARY_PATH'
    }

    env {
        APPTAINER_IMAGE_PATH = "/b/u/vishnu/SINGULARITY_IMAGES"
    }

    params {
        
        
        apptainer_images {

        template_bank_generator = "${env.APPTAINER_IMAGE_PATH}/stochastic_template_bank_generator_latest.sif"

        }

    }



   // HT-Condor Executor for Contra Dresden Cluster
    
    executor {
        name = 'condor'               
        queueSize = 10000               // Maximum number of jobs submitted at once
    }


    process {
        cache = 'lenient'

        withLabel: 'split' {
            cpus = 1
            memory = '30 GB'
            time = '1d'
        }

        withLabel: 'self_check' {
            cpus = 1
            memory = '1 GB'
            time = '10d'
        }


    }